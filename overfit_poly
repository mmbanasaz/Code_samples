import numpy as np
import matplotlib.pyplot as plt
from sklearn.linear_model import LinearRegression
from sklearn.preprocessing import PolynomialFeatures
from sklearn.metrics import mean_squared_error
from sklearn.model_selection import train_test_split

# Step 1: Generate synthetic data
np.random.seed(42)
X = 2 * np.random.rand(100, 1)
y = 4 + 3 * X + np.random.randn(100, 1)

# Step 2: Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Step 3: Fit a simple linear regression model
lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)

# Predicting and calculating error
y_train_pred = lin_reg.predict(X_train)
y_test_pred = lin_reg.predict(X_test)
train_error_lin = mean_squared_error(y_train, y_train_pred)
test_error_lin = mean_squared_error(y_test, y_test_pred)

# Step 4: Fit a polynomial regression model (degree 10)
poly_features = PolynomialFeatures(degree=10, include_bias=False)
X_poly_train = poly_features.fit_transform(X_train)
X_poly_test = poly_features.transform(X_test)

poly_reg = LinearRegression()
poly_reg.fit(X_poly_train, y_train)

# Predicting and calculating error
y_train_poly_pred = poly_reg.predict(X_poly_train)
y_test_poly_pred = poly_reg.predict(X_poly_test)
train_error_poly = mean_squared_error(y_train, y_train_poly_pred)
test_error_poly = mean_squared_error(y_test, y_test_poly_pred)

# Step 5: Plotting the results
plt.figure(figsize=(14, 6))

# Plotting Linear Regression
plt.subplot(1, 2, 1)
plt.scatter(X, y, color='blue')
plt.plot(X, lin_reg.predict(X), color='red', linewidth=2)
plt.title("Linear Regression")
plt.xlabel("X")
plt.ylabel("y")

# Plotting Polynomial Regression
plt.subplot(1, 2, 2)
X_fit = np.linspace(0, 2, 100).reshape(100, 1)
X_poly_fit = poly_features.transform(X_fit)
y_poly_fit = poly_reg.predict(X_poly_fit)
plt.scatter(X, y, color='blue')
plt.plot(X_fit, y_poly_fit, color='red', linewidth=2)
plt.title("Polynomial Regression (degree 10)")
plt.xlabel("X")
plt.ylabel("y")

plt.show()

# Print out errors
print(f"Linear Regression - Train Error: {train_error_lin}, Test Error: {test_error_lin}")
print(f"Polynomial Regression - Train Error: {train_error_poly}, Test Error: {test_error_poly}")