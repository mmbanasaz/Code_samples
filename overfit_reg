import numpy as np
import pandas as pd
import matplotlib.pyplot as plt
from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression, Ridge, Lasso
from sklearn.metrics import mean_squared_error

# Generate synthetic data
np.random.seed(42)
n_samples = 100
n_features = 50

X = np.random.randn(n_samples, n_features)
true_coefficients = np.random.randn(n_features)
y = X @ true_coefficients + np.random.randn(n_samples) * 0.5

# Split the data into training and testing sets
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# Fit a simple linear regression model
lin_reg = LinearRegression()
lin_reg.fit(X_train, y_train)
y_train_pred = lin_reg.predict(X_train)
y_test_pred = lin_reg.predict(X_test)

# Calculate MSE for the linear regression model
mse_train_lin = mean_squared_error(y_train, y_train_pred)
mse_test_lin = mean_squared_error(y_test, y_test_pred)

print("Linear Regression")
print(f"Train MSE: {mse_train_lin:.4f}")
print(f"Test MSE: {mse_test_lin:.4f}")

# Apply Ridge regression
ridge_reg = Ridge(alpha=1.0)
ridge_reg.fit(X_train, y_train)
y_train_pred_ridge = ridge_reg.predict(X_train)
y_test_pred_ridge = ridge_reg.predict(X_test)

# Calculate MSE for the Ridge regression model
mse_train_ridge = mean_squared_error(y_train, y_train_pred_ridge)
mse_test_ridge = mean_squared_error(y_test, y_test_pred_ridge)

print("\nRidge Regression")
print(f"Train MSE: {mse_train_ridge:.4f}")
print(f"Test MSE: {mse_test_ridge:.4f}")

# Apply Lasso regression
lasso_reg = Lasso(alpha=0.1)
lasso_reg.fit(X_train, y_train)
y_train_pred_lasso = lasso_reg.predict(X_train)
y_test_pred_lasso = lasso_reg.predict(X_test)

# Calculate MSE for the Lasso regression model
mse_train_lasso = mean_squared_error(y_train, y_train_pred_lasso)
mse_test_lasso = mean_squared_error(y_test, y_test_pred_lasso)

print("\nLasso Regression")
print(f"Train MSE: {mse_train_lasso:.4f}")
print(f"Test MSE: {mse_test_lasso:.4f}")

# Plotting the results
plt.figure(figsize=(12, 6))

plt.subplot(1, 3, 1)
plt.scatter(y_test, y_test_pred)
plt.title("Linear Regression")
plt.xlabel("True Values")
plt.ylabel("Predictions")

plt.subplot(1, 3, 2)
plt.scatter(y_test, y_test_pred_ridge)
plt.title("Ridge Regression")
plt.xlabel("True Values")
plt.ylabel("Predictions")

plt.subplot(1, 3, 3)
plt.scatter(y_test, y_test_pred_lasso)
plt.title("Lasso Regression")
plt.xlabel("True Values")
plt.ylabel("Predictions")

plt.tight_layout()
plt.show()